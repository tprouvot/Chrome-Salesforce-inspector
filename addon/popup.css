@font-face {
    font-family: 'Salesforce Sans';
    src: url(fonts/SalesforceSans-Light.woff2);
    font-weight: 300
}

@font-face {
    font-family: 'Salesforce Sans';
    src: url(fonts/SalesforceSans-LightItalic.woff2);
    font-style: italic;
    font-weight: 300
}

@font-face {
    font-family: 'Salesforce Sans';
    src: url(fonts/SalesforceSans-Regular.woff2);
    font-weight: 400
}

@font-face {
    font-family: 'Salesforce Sans';
    src: url(fonts/SalesforceSans-Italic.woff2);
    font-style: italic;
    font-weight: 400
}

@font-face {
    font-family: 'Salesforce Sans';
    src: url(fonts/SalesforceSans-Bold.woff2);
    font-weight: 700
}

@font-face {
    font-family: 'Salesforce Sans';
    src: url(fonts/SalesforceSans-BoldItalic.woff2);
    font-style: italic;
    font-weight: 700
}

* {
    box-sizing: border-box;
}

html,
body {
    white-space: normal;
    font-family: "Salesforce Sans", Arial, Helvetica, sans-serif;
    background-color: var(--inspector-background);
    margin: 0;
}

body {
    font-size: .8125rem;
}

html,
body,
#root,
[data-reactroot] {
    height: 100%;
}

[data-reactroot] {
    display: flex;
    flex-direction: column;
}

a:visited {
    color: var(--inspector-visited-link);
}
a > span {
    color: #0176d3;
}

.main {
    flex: 1;
    overflow-y: scroll;
}

.header-logo {
    background: var(--inspector-svg-background);
    padding: 2px 1em 2px 2px;
    color: var(--inspector-svg-text);
    display: flex;
    align-items: center;
    margin: 0 auto;
    border-radius: 3px;
}

button,
input {
    width: 100%;
}

input.api-input {
    width: 32px;
    font-size: inherit;
    border: none;
    background: transparent;
    color: var(--inspector-text-neutral);
}

.page-button {
    width: 100%;
}

.all-data-input {
    font-size: .9em;
    font-family: inherit;
    width: 100%;
    background-color: var(--inspector-background);
    color: var(--inspector-text);
    border: 1px solid var(--inspector-button-border);
    border-radius: 0 .25rem .25rem .25rem;
    display: inline-block;
    padding: 0 2rem 0 .25rem;
    line-height: 1.875rem;
    vertical-align: middle;
    flex-grow: 1;
}

.all-data-input:active,
.all-data-input:focus {
    outline: 0;
    border-color: var(--inspector-button-active-border);
    background-color: var(--inspector-background);
    box-shadow: 0 0 3px var(--inspector-button-active-border);
}

.all-data-box-inner {
    margin-top: .5rem;
    display: flex;
    flex-direction: column;
    min-height: 12em;
    /* should be heigh enough so the buttons below don't jump around when the contents of this box loads */
    color: var(--inspector-text-neutral);
    line-height: 1.5;
}

.all-data-box-inner.empty {
    justify-content: center;
    align-items: center;
}

.all-data-box-data {
    flex: 1;
    font-size: 0.9em;
}

.input-with-dropdown {
    position: relative;
    flex-grow: 1;
}

.input-with-dropdown svg {
    width: .75rem;
    height: .75rem;
    position: absolute;
    right: 1rem;
    top: 50%;
    margin-top: -.375rem;
    fill: var(--inspector-neutral);
}

.autocomplete-container {
    position: relative;
}

.autocomplete {
    border: 1px solid var(--inspector-neutral);
    border-radius: .25rem;
    padding: .25rem 0;
    background-color: var(--inspector-background);
    max-height: 260px;
    position: absolute;
    width: 100%;
    overflow-y: auto;
    overflow-x: hidden;
    z-index: 1;
}

.autocomplete-item {
    display: block;
    padding: .25rem .5rem;
    color: var(--inspector-text);
    line-height: 1.5;
    cursor: pointer;
}

.autocomplete-item-main,
.autocomplete-item-sub,
.data-element {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

.autocomplete-item-sub {
    font-size: .75rem;
    color: var(--inspector-text-neutral);
    margin-top: -.25rem;
}

.autocomplete-item mark {
    font-weight: 700;
    background-color: transparent;
    color: var(--inspector-text);
}

.autocomplete-item.selected {
    background-color: var(--inspector-shade);
}

@keyframes bg-load {
    50% {
        background-color: var(--inspector-background);
        color: var(--inspector-success-background);
    }
}

.all-data-box.loading,
.users-box.loading,
#showStdPageDetailsBtn.loading {
    animation: bg-load 1s cubic-bezier(.5, .4, .5, .6) infinite;
}

.footer-small-text {
    font-size: 0.55rem;
}


.all-data-box-data table {
    text-align: left;
    border-spacing: 0px;
    border-collapse: separate;
}

.all-data-box-data td {
    padding: 0px;
}

.all-data-box-data th {
    padding: 0px;
    padding-right: 5px;
}

.top-space {
    margin-top: 0.5em;
    margin-bottom: 0.2em;
}
.left-space {
    margin-left: 0.5em;
}

.button-secondary {
    line-height: 1.2rem;
    width: auto;
    vertical-align: top;
    margin: 2px;
}

.center {
    text-align: center;
}
.justify-center{
    justify-content: center;
}
ul.small-tabs {
    margin: 0;
    padding: 0;
    font-size: 0.90em;
}

ul.small-tabs li {
    display: inline;
    border: solid 1px var(--inspector-button-border);
    color: var(--inspector-link);
    padding: 2px 6px;
    font-style: italic;
    cursor: pointer;
    line-height: 1.5em;
}

ul.small-tabs li:first-child {
    margin: 0px;
}

ul.small-tabs li.active {
    /*background-color: var(--inspector-background);*/
    font-style: normal;
    font-weight: bold;
    color: var(--inspector-text-neutral);
    padding-top: 6px;
    border-radius: 3px;
}

ul.small-tabs li:hover {
    background-color: var(--inspector-background);
}

.inactive {
    color: var(--inspector-text-neutral);
}

.small-font {
    font-size: 0.9em;
}

.small-font a {
    padding-left: 6px;
    padding-right: 6px;
}

.small {
    font-size: 0.8em;
}

.oneliner {
    white-space: nowrap;
}

.flag {
    vertical-align: middle;
    opacity: 70%;
}

.hide {
    display: none !important;
}

.mask {
    visibility: hidden;
}

a.icon {
    display: inline-block;
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-size: 0.95rem;
    mask-size: 0.95rem;
    background-color: var(--inspector-neutral);
    width: 16px;
    height: 16px;
}

 a.icon-url {
    -webkit-mask-image: url(images/link.svg);
    mask-image: url(images/link.svg);
}
.pointer {
    cursor: pointer;
}

.text-error{
	color: red;
}

.popup-media__figure{
    padding-top:0.25rem;
    padding-left:0.3rem;
}
.popup-header__name-title{
    min-width:0;
    font-size: .95rem;
    padding-top: .4rem;
    color: var(--inspector-text, #061c3f);
    margin-top:0.25rem;
}
.popup-header__title {
    font-weight: 600;
    line-height: 1.25;
    display: block;
}
.popup-title {
    font-size: .9rem !important;
    padding-bottom: .6rem;
}
.popup-header {
    border: 0 !important;
    border-radius: 0 !important;
}

.popup-header__icon{
    width:1.75rem;
    height:1.75rem;
    border-radius: 4px;
    color: var(--inspector-text);
    line-height: 1;
    fill: var(--inspector-text);
    vertical-align: middle;
}

.popup-icon_container,
.popup-icon__container{
  display:inline-block;
  line-height:1;
  background-color:var(--slds-c-icon-color-background, var(--sds-c-icon-color-background, transparent));
}

.popup-footer-icon {
  background-color: unset;
  border: none;

  & > use {
    fill: var(--inspector-text-neutral);
  }
}

.slds-col.slds-size_5-of-12.footer-small-text.slds-m-top_xx-small:has(button.change-value) {
  display: flex;
  flex-direction: row;
  align-items: center;

  & > button.change-value {
      width: 1rem;
      height: 70%;
      padding: 0;
      border-width: 1px;
      border-radius: 3px;

      color: var(--inspector-text);
      background-color: var(--inspector-background);
      border-color: var(--inspector-neutral);
  }
}


/* transitions */
a.slds-button {
    &:has(> span) {
      transition-property: background-color, border-color;
    }

    &:not(:has(> span)) {
      transition-property: color, background-color;
    }

    transition-duration: var(--inspector-transition-time-slow);
    transition-timing-function: var(--inspector-transition-function);
}

a.autocomplete-item {
    transition-property: color;
    transition-duration: var(--inspector-transition-time-fast);
    transition-timing-function: var(--inspector-transition-function);

    & span > mark {
        transition-property: color;
        transition-duration: var(--inspector-transition-time-slow);
        transition-timing-function: var(--inspector-transition-function);
    }
}

input.all-data-input {
    transition-property: color, background-color, border-color;
    transition-duration: var(--inspector-transition-time-slow);
    transition-timing-function: var(--inspector-transition-function);
} 

#mainTabs {
    transition-property: scrollbar-color;
    transition-duration: var(--inspector-transition-time-slow);
    transition-timing-function: var(--inspector-transition-function);

    & > div,
    & ul.small-tabs > li {
        transition-property: background-color, border-color;
        transition-duration: var(--inspector-transition-time-slow);
        transition-timing-function: var(--inspector-transition-function);
    }
}

div.all-data-box-data > table :is(th, td > *),
div:is(.center, .all-data-box-inner.empty),
#root > div > div:last-child > div.slds-size_5-of-12 > :is(a, span, input) {
    transition-property: color;
    transition-duration: var(--inspector-transition-time-slow);
    transition-timing-function: var(--inspector-transition-function);
}

.popup-header__icon {
    transition-property: fill, background-color;
    transition-duration: inherit;
    transition-timing-function: inherit;
}

div.all-data-box-data > table {
    transition-property: color, background-color;
    transition-duration: var(--inspector-transition-time-slow);
    transition-timing-function: var(--inspector-transition-function);
}

#root > div > div:last-child > div:is(.slds-size_2-of-12, .slds-size_1-of-12) > a > svg > use,
svg.slds-icon {
    transition-property: color, fill;
    transition-duration: var(--inspector-transition-time-slow);
    transition-timing-function: var(--inspector-transition-function);
}
