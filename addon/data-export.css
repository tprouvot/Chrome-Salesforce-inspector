@font-face {
  font-family: 'Salesforce Sans';
  src: url(fonts/SalesforceSans-Light.woff2);
  font-weight: 300
}

@font-face {
  font-family: 'Salesforce Sans';
  src: url(fonts/SalesforceSans-LightItalic.woff2);
  font-style: italic;
  font-weight: 300
}

@font-face {
  font-family: 'Salesforce Sans';
  src: url(fonts/SalesforceSans-Regular.woff2);
  font-weight: 400
}

@font-face {
  font-family: 'Salesforce Sans';
  src: url(fonts/SalesforceSans-Italic.woff2);
  font-style: italic;
  font-weight: 400
}

@font-face {
  font-family: 'Salesforce Sans';
  src: url(fonts/SalesforceSans-Bold.woff2);
  font-weight: 700
}

@font-face {
  font-family: 'Salesforce Sans';
  src: url(fonts/SalesforceSans-BoldItalic.woff2);
  font-style: italic;
  font-weight: 700
}

* {
  box-sizing: border-box;
}

html,
body,
#root,
[data-reactroot] {
  height: 100%;
  line-height: 1.5;
  color: var(--inspector-text);
}

[data-reactroot] {
  display: flex;
  flex-direction: column;
}

body {
  font-family: "Salesforce Sans", Arial, sans-serif;
  font-size: .8125rem;
  overflow: hidden;
  margin: 0;
  background-color: var(--inspector-sand-background);
  background-image: url(images/lightning_blue_background.png);
  background-repeat: no-repeat;
  background-size: contain;
  background-position: 0px 48px;
}

#user-info {
  background: var(--inspector-background);
  height: 48px;
  display: flex;
  align-items: center;
  padding: 0 12px;
  flex-wrap: wrap;
}

#user-info h1 {
  padding: 0 6px 0 10px;
}

#user-info span {
  font-size: 1em;
  color: var(--inspector-text);
}

.sf-link {
  background-color: var(--inspector-svg-background);
  border-radius: 3px;
  line-height: 1.8em;
  text-decoration: none;
  display: inline-block;
  padding: 2px;
  color: var(--inspector-svg-text);
  padding-right: 1em;
}

.sf-link svg {
  width: 1.8em;
  height: 1.8em;
  display: block;
  margin-left: 1px;
  margin-right: 1em;
  float: left;
  background-color: var(--inspector-svg-picture);
  border-radius: 2px;
  fill: var(--inspector-svg-text);
}

textarea {
  display: block;
  width: 100%;
  resize: vertical;
  word-wrap: normal;
  font-size: 0.9rem;
  padding: 8px 10px;
  border-radius: 0.25rem;
  border: 1px solid var(--inspector-subtle-neutral);
}

textarea[hidden] {
  display: none;
}

.help-text {
  background: var(--inspector-background);
  border: 1px solid var(--inspector-subtle-neutral);
  padding: 0 15px;
  border-radius: 0.25rem;
  margin-top: 10px;
  margin-bottom: 5px;
}

#query {
  height: 5em;
  min-height: 7em;
  color: var(--inspector-text);
  background-color: var(--inspector-background);
}

#result-area {
  flex: 1 1 0;
  margin-bottom: 12px;
  display: flex;
  flex-direction: column;
  padding: 0;
}

.result-bar {
  margin-bottom: 3px;
  display: flex;
  align-items: center;
  padding: 8px 12px;
}

.result-info {
  font-style: italic;
  margin-left: 9px;
  color: #8c8c8c;
}

#result-text {
  flex: 1 1 0;
  resize: none;
  white-space: pre;
  color: var(--inspector-text);
  background-color: var(--inspector-background);
}

#result-table {
  overflow: auto;
  flex: 1 1 0;
  background-color: var(--inspector-background);
  border-top: 1px solid var(--inspector-neutral);
}

.area {
  background-color: var(--inspector-shade);
  padding: 8px 12px;
  border-radius: 5px;
  border: 1px solid var(--inspector-subtle-neutral);
  margin: 12px 12px 0 12px;
}

h1 {
  font-size: 1rem;
  display: inline;
  color: var(--inspector-text);
  font-weight: 700;
  line-height: 1.25;
  margin: revert;
}
.user-info h1 {
  padding: 0 6px 0 10px;
}

.query-controls {
  display: flex;
  justify-content: space-between;
  align-items: flex-end;
}

.query-controls .button-group {
  margin-bottom: 8px;
}

.query-options {
  margin-bottom: 8px;
}

.query-options label {
  margin-right: 10px;
}

.area input[type="radio"],
.area input[type="checkbox"] {
  margin: 0 2px 0 0;
}

.area label {
  white-space: nowrap;
  cursor: pointer;
}

.area * {
  vertical-align: middle
}

.query-history-controls {
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-end;
}

select,
input[type=search],
input[type=default] {
  width: 8.5rem;
  font-family: inherit;
  padding: 5px 13px;
  border: 1px solid var(--inspector-subtle-neutral);
  height: 32px;
  position: relative;
  border-radius: 0.25rem;
  color: var(--inspector-text);
  background-color: var(--inspector-background);
}

input[type=search] {
  background-image: url(images/search.svg);
  background-repeat: no-repeat;
  background-size: 1rem;
  background-position: 10px 7px;
  padding-left: 35px;
  margin-right: 10px;
}

input[type=save] {
  /*background-image: url(images/save.svg); this is already an svg near this input*/
  background-repeat: no-repeat;
  background-size: 1rem;
  background-position: 10px 7px;
  padding-left: 35px;
}

input[type="checkbox"] {
  width: 1rem;
  height: 1rem;
}

textarea:not([readonly]):focus,
button:active,
button:focus,
input:active,
input:focus,
select:active,
select:focus {
  border: 1px solid var(--inspector-primary);
  box-shadow: var(--inspector-accent) 0px 0px 3px 0px;
  outline: none;
  z-index: 1;
}

.button-group button:active:not(:first-child),
.button-group button:focus:not(:first-child),
.button-group input:active:not(:first-child),
.button-group input:focus:not(:first-child),
.button-group select:focus:not(:first-child),
.button-group select:focus:not(:first-child) {
  margin-left: -1px;
  border: 1px solid var(--inspector-primary);
}

button:active,
button:focus {
  background-color: var(--inspector-background);
  color: var(--inspector-middle);
}

button:disabled,
input:disabled {
  color: var(--inspector-subtle-neutral);
  cursor: default;
}

button:disabled:hover,
input:disabled:hover {
  background-color: var(--inspector-background);
  color: var(--inspector-subtle-neutral);
}

button:disabled > svg.button-icon{
  fill: #dddbda;
}

button > svg.disabled{
  fill: #dddbda;
}

.highlighted {
  background-color: var(--inspector-primary);
  border-color: var(--inspector-primary);
  color: var(--inspector-white);
}

.highlighted:hover,
.highlighted:active {
  background-color: var(--inspector-accent);
  color: var(--inspector-white);
}

.highlighted:disabled {
  background-color: var(--inspector-neutral);
  border-color: var(--inspector-neutral);
  color: var(--inspector-inverted-text);
}

.highlighted:disabled:hover {
  background-color: var(--inspector-neutral);
  color: var(--inspector-inverted-text);
}

option[value="null"][disabled] {
  display: none;
}

textarea[readonly] {
  outline: none;
  border-radius: 0;
  border: none;
  border-top: 1px solid var(--inspector-neutral);
}

#help-btn {
  margin-left: auto;
  text-decoration: none;
  font-size: 1.5rem;
  font-weight: 700;
  color: var(--inspector-neutral);
  display: flex;
  align-items: center;
}

#help-btn:hover .icon {
  background-color: var(--inspector-neutral);
}

#help-btn .icon {
  display: inline-block;
  width: 1.4rem;
  height: 1.4rem;
  ;
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-size: 1.4rem;
  mask-size: 1.4rem;
  -webkit-mask-image: url(images/help.svg);
  mask-image: url(images/help.svg);
  -webkit-mask-position: center;
  mask-position: center;
  background-color: var(--inspector-neutral);
}

#spinner {
  left: -15px;
  top: 9px;
}

.flex-right {
  margin-left: auto;
  display: flex;
  align-items: center;
}

#result-area h1 {
  margin-right: 1em;
}

.cancel-btn {
  margin-left: 1em;
  color: var(--inspector-error);
}

.cancel-btn:not(:disabled):hover,
.cancel-btn:not(:disabled):active,
.cancel-btn:not(:disabled):focus {
  color: var(--inspector-strong-error);
}

.delete-btn {
  background-color: var(--inspector-error);
  border-color: var(--inspector-error);
  color: var(--inspector-text);
  /* Allows to still show the title even when disabled as it contains useful information */
  pointer-events: auto;
}

.delete-btn:not(:disabled):hover,
.delete-btn:not(:disabled):focus {
  background-color: var(--inspector-strong-error);
  border-color: var(--inspector-strong-error);
  color: var(--inspector-text-neutral);
}

.delete-btn:not(:disabled):active {
  background-color: var(--inspector-strong-error);
  border-color: var(--inspector-strong-error);
}

.delete-btn:disabled, .delete-btn:disabled:hover {
  background-color: var(--inspector-shade);
  border-color: var(--inspector-button-border);
  color: var(--inspector-text-neutral);
}

.char-btn {
  color: var(--inspector-text);
  text-decoration: none;
  background-color: var(--inspector-neutral);
  display: inline-block;
  width: 14px;
  height: 14px;
  border-radius: 7px;
  line-height: 14px;
  text-align: center;
  margin: 1px 0 0 3px;
}

.char-btn[hidden],
button[hidden],
.button[hidden] {
  display: none;
}

.button-group {
  white-space: nowrap;
}

.button-group button,
.button-group .button,
.button-group select,
.button-group input {
  border-left-width: 0;
  border-radius: 0;
  margin-right: 0
}

.button-group> :first-child,
.button-group>[hidden]+* {
  border-top-left-radius: 0.25rem;
  border-bottom-left-radius: 0.25rem;
  border-left-width: 1px;
}

.button-group> :last-child {
  border-top-right-radius: 0.25rem;
  border-bottom-right-radius: 0.25rem;
  margin-right: 10px;
}

button,
.button {
  border: 1px solid var(--inspector-button-border);
  height: 32px;
  display: inline-block;
  text-decoration: none;
  background-color: var(--inspector-background);
  padding: 0 16px;
  color: var(--inspector-middle);
  cursor: pointer;
  outline: none;
  position: relative;
  line-height: 32px;
  border-radius: 0.25rem;
  margin-right: 10px;
  white-space: nowrap;
}

button:hover,
.button:hover {
  background-color: var(--inspector-hover);
  color: var(--inspector-middle);
}

button.toggle {
  padding: 0 11px;
}

button.toggle .button-toggle-icon,
button.toggle .button-icon {
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-size: 1rem;
  mask-size: 1rem;
  background-color: var(--inspector-neutral);
  display: inline-block;
  width: 16px;
  height: 16px;
}

button.toggle:hover .button-icon,
button.toggle:hover .button-toggle-icon {
  background-color: var(--inspector-primary);
  color: var(--inspector-middle);
}

.flex-right button:last-child {
  margin-right: 0;
}

button.expand .button-toggle-icon {
  -webkit-mask-image: url(images/down.svg);
  mask-image: url(images/down.svg);
}

button.contract .button-toggle-icon {
  -webkit-mask-image: url(images/up.svg);
  mask-image: url(images/up.svg);
}

button.toggle .button-icon {
  -webkit-mask-image: url(images/light_bulb.svg);
  mask-image: url(images/light_bulb.svg);
}

ul > li > a > span {
  color: #0176d3;
}

svg.button-icon {
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-size: 1rem;
  mask-size: 1rem;
  display: inline-block;
  width: 16px;
  height: 16px;
  fill: #0070d2;
  vertical-align: sub;
}

.autocomplete-header {
  display: flex;
  align-items: flex-end;
  margin-top: 8px;
}

.autocomplete-header span {
  font-size: 1rem;
}

.autocomplete-results {
  overflow: hidden;
  margin-top: 7px;
  display: flex;
  flex-wrap: nowrap;
}

.expanded .autocomplete-results {
  flex-wrap: wrap;
}

.autocomplete-results a {
  border: 1px solid var(--inspector-subtle-neutral);
  border-radius: 0.25rem;
  padding: 0px 4px;
  text-decoration: none;
  color: var(--inspector-link);
}

.autocomplete-results a:hover,
.autocomplete-results a:active {
  background-color: var(--inspector-hover);
  color: var(--inspector-middle);
}

.autocomplete-result,
.autocomplete-results span {
  margin: 0 4px 4px 0;
  white-space: nowrap;
}

.autocomplete-icon {
  display: inline-block;
  margin: -1px 2px 0 1px;
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-size: 0.95rem;
  mask-size: 0.95rem;
  background-color: var(--inspector-neutral);
  width: 16px;
  height: 16px;
}

.relationshipName {
  font-style: italic;
}

.relationshipName .autocomplete-icon {
  -webkit-mask-image: url(images/relate.svg);
  mask-image: url(images/relate.svg);
  background-color: var(--inspector-accent);
}

.object .autocomplete-icon {
  -webkit-mask-image: url(images/sobject.svg);
  mask-image: url(images/sobject.svg);
  background-color: var(--inspector-success-background);
}

.variable .autocomplete-icon {
  -webkit-mask-image: url(images/variable.svg);
  mask-image: url(images/variable.svg);
}

.autocomplete-icon {
  -webkit-mask-image: url(images/quotation_marks.svg);
  mask-image: url(images/quotation_marks.svg);
}

.null .autocomplete-icon {
  -webkit-mask-image: url(images/steps.svg);
  mask-image: url(images/steps.svg);
}

.fieldName .autocomplete-icon {
  /* default icon */
  -webkit-mask-image: url(images/question_mark.svg);
  mask-image: url(images/question_mark.svg);
}

.fieldName.reference .autocomplete-icon {
  -webkit-mask-image: url(images/record_lookup.svg);
  mask-image: url(images/record_lookup.svg);
}

.fieldName.string .autocomplete-icon {
  -webkit-mask-image: url(images/string.svg);
  mask-image: url(images/string.svg);
}

.fieldName.id .autocomplete-icon {
  -webkit-mask-image: url(images/anchor.svg);
  mask-image: url(images/anchor.svg);
}

.fieldName.picklist .autocomplete-icon {
  -webkit-mask-image: url(images/picklist.svg);
  mask-image: url(images/picklist.svg);
}

.fieldName.multipicklist .autocomplete-icon {
  -webkit-mask-image: url(images/multi-picklist.svg);
  mask-image: url(images/multi-picklist.svg);
}

.fieldName.boolean .autocomplete-icon {
  -webkit-mask-image: url(images/boolean.svg);
  mask-image: url(images/boolean.svg);
}

.fieldName.phone .autocomplete-icon {
  -webkit-mask-image: url(images/call.svg);
  mask-image: url(images/call.svg);
}

.fieldName.textarea .autocomplete-icon {
  -webkit-mask-image: url(images/textarea.svg);
  mask-image: url(images/textarea.svg);
}

.fieldName.url .autocomplete-icon {
  -webkit-mask-image: url(images/link.svg);
  mask-image: url(images/link.svg);
}

.fieldName.int .autocomplete-icon,
.fieldName.double .autocomplete-icon,
.fieldName.long .autocomplete-icon {
  -webkit-mask-image: url(images/number.svg);
  mask-image: url(images/number.svg);
}

.fieldName.address .autocomplete-icon {
  -webkit-mask-image: url(images/home.svg);
  mask-image: url(images/home.svg);
}

.fieldName.datetime .autocomplete-icon {
  -webkit-mask-image: url(images/date-time.svg);
  mask-image: url(images/date-time.svg);
}

.fieldName.date .autocomplete-icon {
  -webkit-mask-image: url(images/date.svg);
  mask-image: url(images/date.svg);
}

.fieldName.currency .autocomplete-icon {
  -webkit-mask-image: url(images/currency.svg);
  mask-image: url(images/currency.svg);
}

.fieldName.email .autocomplete-icon {
  -webkit-mask-image: url(images/email.svg);
  mask-image: url(images/email.svg);
}

.fieldName.location .autocomplete-icon {
  -webkit-mask-image: url(images/checkin.svg);
  mask-image: url(images/checkin.svg);
}

.fieldName.percent .autocomplete-icon {
  -webkit-mask-image: url(images/percent.svg);
  mask-image: url(images/percent.svg);
}

.fieldName.encryptedstring .autocomplete-icon {
  -webkit-mask-image: url(images/lock.svg);
  mask-image: url(images/lock.svg);
}

.fieldName.time .autocomplete-icon {
  -webkit-mask-image: url(images/clock.svg);
  mask-image: url(images/clock.svg);
}

.fieldName.complexvalue .autocomplete-icon {
  -webkit-mask-image: url(images/advanced_function.svg);
  mask-image: url(images/advanced_function.svg);
}

.header {
  position: -webkit-sticky;
  position: sticky;
  top: 0;
  z-index: 2;
}

.query-options {
  align-self: center;
}

#save-wrapper {
  border: 1px solid var(--inspector-subtle-neutral);
  background-color: var(--inspector-background);
  padding: 5px 13px;
  width: 8.5rem;
  display: inline-block;
  overflow: hidden;

  &:has(:active, :focus) {
    border: 1px solid var(--inspector-primary);
    box-shadow: var(--inspector-accent) 0px 0px 3px 0px;
    outline: none;
    z-index: 1;
  }

  & > svg {
    width: 1rem;
    fill: var(--inspector-text);
  }

  & > input {
    color: var(--inspector-text);
    background-color: transparent;
    border: none;
    padding-left: 15px;

    &:active, &:focus {
      border: none;
      box-shadow: none;
    }
  }
}

.expanded{
  overflow: auto;
  height: 200px;
}

select.query-history {
    height: auto;
}

/* transitions */
#save-wrapper {
    transition-property: background-color;
    transition-duration: var(--inspector-transition-time-slow);
    transition-timing-function: var(--inspector-transition-function);

    & > input {
        transition-property: color;
        transition-duration: var(--inspector-transition-time-slow);
        transition-timing-function: var(--inspector-transition-function);
    }

    & svg {
        transition-property: fill, background-color;
        transition-duration: inherit;
        transition-timing-function: inherit;
    }
}

div#result-area > div.result-bar input,
button.cancel-btn,
div.autocomplete-header > div.flex-right > button,
div.autocomplete-results > div.autocomplete-result > a,
div.button-group > :is(button, input),
select.query-history {
    transition-property: color, background-color;
    transition-duration: var(--inspector-transition-time-slow);
    transition-timing-function: var(--inspector-transition-function);
}
