@font-face {
  font-family: 'Salesforce Sans';
  src: url(fonts/SalesforceSans-Light.woff2);
  font-weight: 300
}

@font-face {
  font-family: 'Salesforce Sans';
  src: url(fonts/SalesforceSans-LightItalic.woff2);
  font-style: italic;
  font-weight: 300
}

@font-face {
  font-family: 'Salesforce Sans';
  src: url(fonts/SalesforceSans-Regular.woff2);
  font-weight: 400
}

@font-face {
  font-family: 'Salesforce Sans';
  src: url(fonts/SalesforceSans-Italic.woff2);
  font-style: italic;
  font-weight: 400
}

@font-face {
  font-family: 'Salesforce Sans';
  src: url(fonts/SalesforceSans-Bold.woff2);
  font-weight: 700
}

@font-face {
  font-family: 'Salesforce Sans';
  src: url(fonts/SalesforceSans-BoldItalic.woff2);
  font-style: italic;
  font-weight: 700
}

* {
  box-sizing: border-box;
}

html,
body,
#root,
[data-reactroot] {
  height: 100%;
}

.prod {
  background-color: var(--inspector-prod-background);
  background-image: url(images/lightning_red_background.png);
}

[data-reactroot] {
  display: flex;
  flex-direction: column;
}

html {
  font-family: "Salesforce Sans", Arial, sans-serif;
  font-size: 100%;
  line-height: 1.5;
  background: var(--inspector-background);
  color: var(--inspector-accent);
}

body {
  font-family: "Salesforce Sans", Arial, sans-serif;
  font-size: .8125rem;
  margin: 0;
  background-color: var(--inspector-sand-background);
  background-image: url(images/lightning_blue_background.png);
  background-repeat: no-repeat;
  background-size: contain;
  background-position: 0px 48px;
}

a {
  color: var(--inspector-link);
  text-decoration: none;
  transition: color .1s linear;
}

a:active {
  color: var(--inspector-primary);
}

a:focus,
a:hover {
  text-decoration: underline;
  color: var(--inspector-accent);
}

a:active,
a:hover {
  outline: 0;
}

.sf-link,
.sf-link:active,
.sf-link:focus,
.sf-link:hover {
  margin-right: 1em;
  background-color: var(--inspector-svg-background);
  border-radius: 3px;
  line-height: 1.8em;
  text-decoration: none;
  display: inline-block;
  padding: 2px;
  color: var(--inspector-svg-text);
  padding-right: 1em;
  margin-right: 4px;
}

.sf-link svg {
  width: 1.8em;
  height: 1.8em;
  display: block;
  margin-left: 1px;
  margin-right: 1em;
  float: left;
  background-color: var(--inspector-svg-picture);
  border-radius: 2px;
  fill: var(--inspector-svg-text);
}

table {
  width: 100%;
  border-spacing: 0px;
  position: relative;
  text-align: left;
  overflow: scroll;
}

.value-text {
  word-wrap: break-word;
  white-space: pre-wrap;
}


.value-text.value-is-object {
  color: var(--inspector-object);
}

.value-text.value-is-number {
  color: var(--inspector-number);
}

.value-text.value-is-boolean {
  color: var(--inspector-false-boolean);
}

.value-text.value-is-boolean-true {
  color: var(--inspector-true-boolean);
}

.value-text.value-is-blank {
  color: var(--inspector-neutral);
  font-style: italic;
}

.value-text.value-is-unknown {
  color: var(--inspector-neutral);
  font-style: italic;
}

tr.fieldCalculated {
  font-style: italic;
}

tr.fieldHidden,
tr.fieldHidden a[href] {
  color: var(--inspector-neutral);
}

tr:hover {
  background-color: var(--inspector-shade);
}

th {
  text-align: left;
}

textarea {
  font: inherit;
  color: var(--inspector-text);
  background-color: var(--inspector-background);
}

thead{
  top: 0;
  position: sticky;
  z-index: 1;
}

.th-filter-row {
  background-color: var(--inspector-background);

  & > input {
    color: var(--inspector-text);
    background-color: inherit;
    border: 2px solid var(--inspector-shade);
  }
}

.field-label, .field-name, .field-column, .field-actions, .child-column, .child-actions {
  padding: 1px 4px;
}

.border-cell {
  border-bottom: 1px solid var(--inspector-neutral);
}

.field-label {
  white-space: nowrap;
}

.field-name {
  white-space: nowrap;
}

.field-column {
  max-width: 200px;
  /* To handle long words. This is not actually 200px but scales with the table. Table layout magic. */
}

.field-column textarea {
  width: calc(100% - 20px);
  resize: vertical;
}

.undo-button {
  background-color: var(--inspector-background);
  border-radius: 3px;
  width: 16px;
  height: 16px;
  display: inline-block;
  box-shadow: 1px 1px 1px var(--inspector-neutral);
  color: var(--inspector-text);
  text-decoration: none;
  text-align: center;
  vertical-align: top;
  margin-top: 5px;
}

.undo-button[hidden] {
  display: none;
}

.field-actions {
  text-align: right;
  white-space: nowrap;
}

.actions-button {
  width: 1.25rem;
  height: 1.25rem;
  line-height: 1;
  background-color: var(--inspector-background);
  vertical-align: middle;
  color: var(--inspector-neutral);
  border: 1px solid var(--inspector-neutral);
  transition: border .15s linear;
  position: relative;
  display: inline-block;
  padding: 0;
  border-radius: .25rem;
  -webkit-appearance: none;
  appearance: none;
  white-space: normal;
  cursor: pointer;
}

.actions-button:hover,
.actions-button:active,
.actions-button:focus {
  color: var(--inspector-primary);
}

.actions-button:focus {
  outline: 0;
  box-shadow: 0 0 3px var(--inspector-primary);
}

.actions-icon {
  width: .75rem;
  height: .75rem;
  overflow: hidden;
  fill: var(--inspector-neutral);
}

.table-settings-button {
  border: 0px solid transparent;
  padding: 0px 3px 0px 0px;
  background-color: var(--inspector-background);
}

.table-settings-icon {
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-size: 1rem;
  mask-size: 1rem;
  background-color: var(--inspector-neutral);
  display: inline-block;
  width: 16px;
  height: 16px;
  -webkit-mask-image: url(images/settings.svg);
  mask-image: url(images/settings.svg);
  margin: 3px 0px -3px 0px;
}

.table-settings-link {
  font-weight: normal;
}

th[tabindex] {
  cursor: pointer;
  font-weight: 700;
  background-color: var(--inspector-background);
}

.column-filter-box {
  width: 100%;
}

#fieldDetailsView {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background: rgba(0, 0, 0, 0.8);
  z-index: 99999;
}

#fieldDetailsView>div.container {
  width: 600px;
  height: 500px;
  position: relative;
  margin: 10% auto;
  border-radius: 10px;
  background: var(--inspector-background);
}

#fieldDetailsView>div.container>div.mainContent {
  overflow: auto;
  height: 470px;
  padding: 5px 20px 13px 20px;
}

div.mainContent > input {
  color: var(--inspector-text);
  background-color: var(--inspector-background);
}

.closeLnk {
  background: var(--inspector-neutral);
  color: var(--inspector-text);
  line-height: 25px;
  position: absolute;
  right: -12px;
  text-align: center;
  top: -10px;
  width: 24px;
  text-decoration: none;
  font-weight: bold;
  border-radius: 12px;
  box-shadow: 1px 1px 3px var(--inspector-shade);
}

.closeLnk:hover {
  background: var(--inspector-primary);
}

#fieldDetailsView td {
  white-space: pre;
}

.filter-box {
  white-space: nowrap;
  margin: 0 0.5rem;
  position: relative;
}

.filter-input {
  font: inherit;
  width: 20em;
  padding: 0 2.5rem;
  background-color: var(--inspector-background);
  color: var(--inspector-text-neutral);
  border: 1px solid var(--inspector-neutral);
  border-radius: .25rem;
  transition: border .1s linear, background-color .1s linear;
  display: inline-block;
  line-height: 1.875rem;
  min-height: calc(1.875rem + (1px * 2));
}

.filter-input:active,
.filter-input:focus {
  outline: 0;
  border-color: var(--inspector-primary);
  background-color: var(--inspector-background);
  box-shadow: 0 0 3px var(--inspector-primary);
}

.filter-icon {
  left: 0.75rem;
  width: 1rem;
  height: 1rem;
  position: absolute;
  top: 50%;
  margin-top: -.5rem;
  fill: var(--inspector-neutral);
}

.filter-clear {
  right: 0.75rem;
  width: 1rem;
  height: 1rem;
  position: absolute;
  top: 50%;
  margin-top: -.5rem;
  fill: var(--inspector-neutral);
  line-height: 1;
  vertical-align: middle;
  color: var(--inspector-neutral);
  display: inline-block;
  border: 1px solid transparent;
  border-radius: .25rem;
  font-size: .75rem;
  text-decoration: none;
  transition: color 50ms linear, background-color 50ms linear;
}

.filter-clear-icon {
  width: .875rem;
  height: .875rem;
  fill: currentColor;
}

.error-message {
  font-size: 1.2em;
  font-weight: bold;
  margin: .5em 0;
  background-color: var(--inspector-warning);
  padding: .5em;
  border: 1px solid red;
  border-radius: 7px;
}

/*
#spinner {
  position: absolute;
  left: -15px;
  top: -15px;
}*/
.object-bar {
  background: var(--inspector-background);
  width: 100%;
  display: flex;
  align-items: center;
  padding: 0 12px;
  flex-wrap: wrap;
  border-bottom: 1px solid var(--inspector-neutral);
}

.object-tab {
  position: relative;
  align-self: flex-end;
}

.object-tab a {
  color: var(--inspector-neutral);
  padding: 0 .75rem;
  text-decoration: none;
  height: 3rem;
  line-height: 3rem;
  display: inline-block;
}

.object-tab a,
.object-tab a:focus,
.object-tab a:active,
.object-tab a:hover {
  text-decoration: none;
}

.object-tab:hover::after,
.object-tab.active-tab::after {
  background-color: var(--inspector-accent);
}

.object-tab.active-tab a {
  color: var(--inspector-link);
}

.object-tab * {
  vertical-align: middle;
}

.object-tab::after {
  display: block;
  content: '';
  bottom: 0;
  left: 0;
  right: 0;
  position: absolute;
  height: 2px;
  align-self: stretch;
}

.object-tab .tab-with-icon {
  padding-right: .375rem;
}

.object-tab .button-icon-link {
  padding-left: .375rem;
}

.button-icon {
  width: .875rem;
  height: .875rem;
  fill: currentColor;
  vertical-align: middle;
}

.object-name {
  flex: 1 1 0;
  margin: 0 1em;
  font-size: 1.1em;
  font-weight: normal;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
  position: relative;
  display: flex;
  justify-content: left;
}

.button {
  background-color: var(--inspector-background);
  color: var(--inspector-accent);
  text-decoration: none;
  padding: 0 1rem;
  text-align: center;
  vertical-align: middle;
  border: 1px solid var(--inspector-neutral);
  display: inline-block;
  border-radius: .25rem;
  font: unset;
  font-size: .75rem;
  line-height: 1.875rem;
  transition: color 50ms linear, background-color 50ms linear;
}

.button[disabled] {
  cursor: default;
  background-color: var(--slds-g-color-neutral-base-80, var(--inspector-neutral));
  border-color: var(--slds-g-color-neutral-base-80, var(--inspector-neutral));
  color: var(--slds-g-color-neutral-base-100, var(--inspector-text));
}

.object-actions {
  position: relative;
}

.object-actions .button:not(:first-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-left: none;
}

.object-actions .button:not(:last-child) {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.button:active:not([disabled]) {
  background-color: var(--inspector-background);
  color: var(--inspector-accent);
}

.button:focus {
  outline: 0;
  box-shadow: 0 0 3px var(--inspector-primary);
}

.button:focus:not([disabled]),
.button:hover:not([disabled]) {
  background-color: var(--inspector-background);
  color: var(--inspector-primary);
}

.button:active,
.button:focus,
.button:hover,
.button:visited {
  text-decoration: none;
}

.button-brand {
  background-color: var(--inspector-primary);
  border-color: var(--inspector-primary);
  color: var(--inspector-text);
}

.button-brand:focus:not([disabled]),
.button-brand:hover:not([disabled]) {
  background-color: var(--inspector-primary);
  border-color: var(--inspector-primary);
  color: var(--inspector-text);
}

.button-brand:active:not([disabled]) {
  background-color: var(--inspector-primary);
  border-color: var(--inspector-primary);
  color: var(--inspector-text);
}

.button-destructive {
  background-color: var(--inspector-error);
  border-color: var(--inspector-error);
  color: var(--inspector-text);
}

.button-destructive:focus:not([disabled]),
.button-destructive:hover:not([disabled]) {
  background-color: var(--inspector-warning);
  color: var(--inspector-text);
}

.button-destructive:active:not([disabled]) {
  background-color: var(--inspector-error);
  border-color: var(--inspector-error);
  color: var(--inspector-text);
}

.column-button-outer {
  position: relative;
  display: inline-block;
}

.column-popup-inner {
  overflow: auto;
  max-height: 500px;
}

.column-popup {
  position: absolute;
  z-index: 7000;
  text-align: left;
  left: 50%;
  transform: translateX(-50%);
  white-space: nowrap;
  border: 1px solid var(--inspector-neutral);
  border-radius: .25rem;
  padding: .25rem 0;
  font-size: .75rem;
  background: var(--inspector-background);
  box-shadow: 0 2px 3px 0 rgba(0, 0, 0, .16);
  margin-top: .5rem;
}

.column-popup::before {
  width: 1rem;
  height: 1rem;
  position: absolute;
  transform: rotate(45deg);
  content: '';
  background-color: inherit;
  left: 50%;
  top: -.5rem;
  margin-left: -.5rem;
}

.column-popup::after {
  box-shadow: -1px -1px 0 0 rgba(0, 0, 0, .16);
  z-index: -1;
  width: 1rem;
  height: 1rem;
  position: absolute;
  transform: rotate(45deg);
  content: '';
  background-color: inherit;
  left: 50%;
  top: -.5rem;
  margin-left: -.5rem;
}

.column-popup label.menu-item {
  display: block;
  padding: .2rem .75rem;
}

.column-popup span.menu-item {
  display: block;
  padding: .5rem .75rem;
  font-size: .75rem;
  line-height: 1.25;
  color: var(--inspector-neutral);
  text-transform: uppercase;
  letter-spacing: .0625rem;
}

.column-popup label.menu-item:hover {
  background-color: var(--inspector-background);
}

.table-container {
  margin: 12px;
  overflow: auto;
  flex: 1 1 0;
  border-radius: 3px;
  border: 1px solid var(--inspector-neutral);
  background-color: var(--inspector-background);
}

@keyframes spin {
  100% {
    transform: rotate(360deg);
  }
}

.table-container.empty {
  animation: spin 4s linear infinite;
}

.edit-bar {
  text-align: center;
  padding: 4px;
}

.footer-edit-bar {
  display: flex;
  padding: 4px;
  border: 1px solid var(--inspector-neutral);
  background-color: var(--inspector-background);
  justify-content: center;
}

.edit-bar .button {
  margin: 0 .25rem;
}

.child-actions {
  text-align: right;
  white-space: nowrap;
}

.pop-menu-container {
  position: relative;
}

.pop-menu {
  z-index: 10;
  position: absolute;
  border: 1px solid var(--inspector-neutral);
  background-color: var(--inspector-background);
  padding: 5px 10px;
  margin-left: 5px;
  margin-top: -5px;
}

.pop-menu a {
  display: block;
}

.object-actions .pop-menu,
.field-actions .pop-menu,
.child-actions .pop-menu {
  right: 0;
  text-align: right;
}

/* transition */
div.object-name {
    transition-property: color, background-color;
    transition-duration: var(--inspector-transition-time-slow);
    transition-timing-function: var(--inspector-transition-function);

    > span.quick-select {
        transition-property: none;
    }
}

div.table-container {
    transition-property: background-color, scrollbar-color;
    transition-duration: var(--inspector-transition-time-slow);
    transition-timing-function: var(--inspector-transition-function);

    & > table > tbody > tr {
        transition-property: background-color;
        transition-duration: var(--inspector-transition-time-slow);
        transition-timing-function: var(--inspector-transition-function);
    }
}

th.th-filter-row {
    transition-property: background-color;
    transition-duration: var(--inspector-transition-time-slow);
    transition-timing-function: var(--inspector-transition-function);

    & > input {
        transition-property: color, border-color;
        transition-duration: inherit;
        transition-timing-function: inherit;
    }
}

div.value-text {
    transition-property: color;
    transition-duration: var(--inspector-transition-time-slow);
    transition-timing-function: var(--inspector-transition-function);
}

input.filter-input,
button.actions-button,
th[tabindex] {
    transition-property: color, background-color;
    transition-duration: var(--inspector-transition-time-slow);
    transition-timing-function: var(--inspector-transition-function);
}

.table-settings-button {
    transition-property: background-color;
    transition-duration: var(--inspector-transition-time-slow);
    transition-timing-function: var(--inspector-transition-function);
}
